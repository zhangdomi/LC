# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def reverseBetween(self, head, left, right):
        """
        :type head: Optional[ListNode]
        :type left: int
        :type right: int
        :rtype: Optional[ListNode]
        """
        if left == right:
            return head

        #1. step
        dummy = ListNode(0, head)
        l_prev, cur = dummy, head
        for i in range(left - 1):
            l_prev = cur
            cur = cur.next

        #2. step
        prev = None
        for i in range(right-left + 1):
            temp_next = cur.next
            cur.next = prev
            prev = cur
            cur = temp_next

        #3. step
        l_prev.next.next = cur
        l_prev.next = prev
        return l_prev

        #Time O(n)
